#include <stdio.h>
#include <stdlib.h>
#define chartonumber(x) (x-'0')

int main(int argc, char * argv[]){
	int quit = 0;
	while(1) {  
		printf("    ______         __       ____    ____  _________   _______\n");
		printf("  .' ___  |       /  \\     |_   \\  /   _||_   ___  | /  ___  |\n");
		printf(" / .'   \\_|      / /\\ \\      |   \\/   |    | |_  \\_||  (__ \\_|\n");
		printf(" | |    ____    / ____ \\     | |\\  /| |    |  _|  _  '.___`-.\n");
		printf(" \\ `.___]  _| _/ /    \\ \\_  _| |_\\/_| |_  _| |___/ ||`\\____) |\n");
		printf("  `._____.'  |____|  |____||_____||_____||_________||_______.'\n");
		
		printf("==============================================================\n");
		printf("                           1. Guess Number\n");
		printf("                           2. N Queen\n");
		printf("                           q. quit\n");
		printf("==============================================================\n");
	
		char bur[128];
		read(0, bur, 128);
		switch(bur[0]) {
		case '1':
			guess();
			break;
		case '2':
			queen();
			break;
		case 'q':
			printf("See you next time!\n");
			quit = 1;
			break;
		default:
			printf("Uh-oh! Error command!\n");
		}
		printf("\n");
		if(quit)
			break;
	}
	return 0;
}
/****************************N queen game*******************************/

void traceback(int l);

int jc(int l, int i);

int n, h[100];

int x;

void queen() {
	printf("==============================================================\n");
	printf("                Welcome to 'N Queen'!\n");
	printf("--------------------------------------------------------------\n");
	printf("==============================================================\n\n");
	
	printf("N = ");
	char bur[128];
	read(0, bur, 128);
	n = chartonumber(bur[0]);
	x = 0;
	traceback(1);
	printf("There are %d stacking methods\n", x);
}

void traceback(int l)
{
	int i, j;
	if (l == n + 1) {
		x = x + 1;
		printf("stacking methods are:\n", x);
		for (i = 1; i <= n; i++)
			printf("%d", h[i]);
		printf("\n");
	}
	for (i = 1; i <= n; i++) {
		h[l] = i;
		if (jc(l, i) != 1)
			traceback(l + 1);
	}
}

int jc(int l, int i)
{

	int k;
	for (k = 1; k<l; k++)
		if ((l - k == h[k] - i) || i == h[k])
			return 1;
	return 0;
}


/***************************guess number********************************/
int my_atoi(const char *s)
{
	int num = 0;
	int i = 0;
	char ch;
	while(s[i]) {
		ch = s[i];
		i++;
		if (ch < '0' || ch > '9')
			break;
		num = num * 10 + (ch - '0');
	}
	return num;
}

void guess()
{
	printf("==============================================================\n");
	printf("                Welcome to 'Guess Number'!\n");
	printf("--------------------------------------------------------------\n");
	printf("  I have a number between 1 and 999,\n");
	printf("  and you have 5 chances to guess what is it.\n");
	printf("  If you guess that number, you win.\n");
	printf("  You can input 'q' to quit the game.\n");
	printf("  Good luck!\n");
	printf("==============================================================\n\n");
	int stop = 0;
	
	int a,b;
	char c;
	a = 678;
	int flag = 0;
	printf("  First try:");
	char bufr[128];
	read(0, bufr, 128);
	b = my_atoi(bufr);
	if(bufr[0] == 'q') {
		return;
	}
	int chances;
	for(chances = 4; chances > 0; chances--) {
		if (b == a) {
			printf("  Excellent! You guessed the number!\n");
			flag = 1;
			return;
		}
		else if (b < a) {
			printf("  Too small. You still have %d chances:", chances);
			read(0, bufr, 128);
			b = my_atoi(bufr);
		}
		else if (b > a) {
			printf("  Too big. You still have %d chances:", chances);
			read(0, bufr, 128);
			b=my_atoi(bufr);
		}
		if(bufr[0] == 'q')
			return;
	}
	if(!flag) {
		printf("  Game over! The number is %d.\n", a);
	}
	return;
}

